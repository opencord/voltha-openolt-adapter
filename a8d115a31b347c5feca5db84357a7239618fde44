{
  "comments": [
    {
      "key": {
        "uuid": "8ea37d9e_28c1995a",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 605,
      "author": {
        "id": 1000548
      },
      "writtenOn": "2019-07-29T19:41:47Z",
      "side": 1,
      "message": "Do we need to take lock here ? \n\nIs there a chance that omci-indication will be received before ONT is activated by OLT as part of discovery procedure ? This helps when adapter restarts after activated ONU ?",
      "revId": "a8d115a31b347c5feca5db84357a7239618fde44",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de0175d6_9868f432",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 605,
      "author": {
        "id": 1000436
      },
      "writtenOn": "2019-07-29T20:09:17Z",
      "side": 1,
      "message": "from my understanding with golang maps it needs a lock even if its a reader.  as other threads may be adding items to this map there is a chance of corruption.\n\nSee this: https://stackoverflow.com/questions/11063473/map-with-concurrent-access",
      "parentUuid": "8ea37d9e_28c1995a",
      "revId": "a8d115a31b347c5feca5db84357a7239618fde44",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d488b352_6314db92",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 623,
      "author": {
        "id": 1000548
      },
      "writtenOn": "2019-07-29T19:41:47Z",
      "side": 1,
      "message": "Do we need to take lock again here ? Or we can still hold same the lock taken above and release once updated database ?",
      "revId": "a8d115a31b347c5feca5db84357a7239618fde44",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8360fe9_d43f241a",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 623,
      "author": {
        "id": 1000436
      },
      "writtenOn": "2019-07-29T20:09:17Z",
      "side": 1,
      "message": "I tried to avoid keeping locks locked when making coreProxy (network) calls.  if its all local/in memory work keeping the lock longer seems safe.",
      "parentUuid": "d488b352_6314db92",
      "revId": "a8d115a31b347c5feca5db84357a7239618fde44",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d2a2ae6_64ded8e7",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 750,
      "author": {
        "id": 1000548
      },
      "writtenOn": "2019-07-29T19:41:47Z",
      "side": 1,
      "message": "This defer function will be called even after successfully added ONU which is not right(Duplicate discovery  will be processed ) . discOnus cache  shall  be deleted only when ONU is deactivated at OLT OR deleted explicitly when failed to activate ONU",
      "revId": "a8d115a31b347c5feca5db84357a7239618fde44",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46f19b2e_08a1b283",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 750,
      "author": {
        "id": 1000436
      },
      "writtenOn": "2019-07-29T20:09:17Z",
      "side": 1,
      "message": "the delete was already here so i kept it.  i think it makes sense to keep this populated as you say until the olt hardware is restarted.  \n\nHow about remove this defer altogether?",
      "parentUuid": "0d2a2ae6_64ded8e7",
      "revId": "a8d115a31b347c5feca5db84357a7239618fde44",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2c15dac_894d7d93",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 770,
      "author": {
        "id": 1000548
      },
      "writtenOn": "2019-07-29T19:41:47Z",
      "side": 1,
      "message": "why do we need to take lock here since dh.discOnus[sn] is already updated hence at any point of time one discovery will be processed  fully ?",
      "revId": "a8d115a31b347c5feca5db84357a7239618fde44",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca9968f4_c43d0449",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 770,
      "author": {
        "id": 1000436
      },
      "writtenOn": "2019-07-29T20:09:17Z",
      "side": 1,
      "message": "part of the reason for all the locking is now onuDiscIndication starts its own thread per discovery.  this is to prevent the whole of readIndications thread from being put to sleep, pausing all indications.\n\ngetONUID for multiple concurrent discoveries/activations returned the same onu id for multiple onu being activated at the same time, breaking many things.  hence the lock",
      "parentUuid": "c2c15dac_894d7d93",
      "revId": "a8d115a31b347c5feca5db84357a7239618fde44",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44f74b90_74df61dd",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 797,
      "author": {
        "id": 1000548
      },
      "writtenOn": "2019-07-29T19:41:47Z",
      "side": 1,
      "message": "why do we need to take lock here since dh.discOnus[sn] is already updated hence  at this  point of time only one discovery will be processed? Any other specific scenario ?",
      "revId": "a8d115a31b347c5feca5db84357a7239618fde44",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "659eb465_b4d6c45a",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 817,
      "author": {
        "id": 1000436
      },
      "writtenOn": "2019-07-29T20:13:51Z",
      "side": 1,
      "message": "if onuDiscIndication is not its own goroutine, this puts all of readIndications to sleep.  pausing all discoveries, omci, etc.",
      "range": {
        "startLine": 817,
        "startChar": 1,
        "endLine": 817,
        "endChar": 28
      },
      "revId": "a8d115a31b347c5feca5db84357a7239618fde44",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}