{
  "comments": [
    {
      "key": {
        "uuid": "9b0204f1_337a7f00",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 3
      },
      "lineNbr": 1410,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2019-10-24T17:59:19Z",
      "side": 1,
      "message": "do we need to worry about protecting this update concurrently? or are all updates to onuGemPortIds also protected by the same mutex?",
      "range": {
        "startLine": 1410,
        "startChar": 0,
        "endLine": 1410,
        "endChar": 38
      },
      "revId": "0a07dd47ed312d8d419e907e4a97c46dc5aac6fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d94a6e3_1446967b",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 3
      },
      "lineNbr": 1410,
      "author": {
        "id": 1000455
      },
      "writtenOn": "2019-10-24T18:19:13Z",
      "side": 1,
      "message": "This function is called as a result of flows being added. Currently flows aren\u0027t added concurrently (no use of goroutines) so it isn\u0027t a risk in the code currently. I imagine it could be an issue later if we change this.",
      "parentUuid": "9b0204f1_337a7f00",
      "range": {
        "startLine": 1410,
        "startChar": 0,
        "endLine": 1410,
        "endChar": 38
      },
      "revId": "0a07dd47ed312d8d419e907e4a97c46dc5aac6fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee8217bb_5cc1914e",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 3
      },
      "lineNbr": 1410,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2019-10-24T18:20:47Z",
      "side": 1,
      "message": "if this is initiated because of a GRPC call, then couldn\u0027t this come on different threads? i.e. doesn\u0027t each grpc handler invocation gets its own go routine?",
      "parentUuid": "4d94a6e3_1446967b",
      "range": {
        "startLine": 1410,
        "startChar": 0,
        "endLine": 1410,
        "endChar": 38
      },
      "revId": "0a07dd47ed312d8d419e907e4a97c46dc5aac6fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41a1b286_a2bab819",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 3
      },
      "lineNbr": 1410,
      "author": {
        "id": 1000455
      },
      "writtenOn": "2019-10-24T18:34:23Z",
      "side": 1,
      "message": "This happens over kafka. It does seem like it could theoretically happen depending on how the upstream sends flows, but even when I have added 70 subscribers (and hence their flows) at once from onos, that has not happened. \nMaybe we need to add a lock, but in practice concurrent map writes are pretty easy to detect and fix. Do we want to add locks preemptively here?",
      "parentUuid": "ee8217bb_5cc1914e",
      "range": {
        "startLine": 1410,
        "startChar": 0,
        "endLine": 1410,
        "endChar": 38
      },
      "revId": "0a07dd47ed312d8d419e907e4a97c46dc5aac6fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dfabf76_46d65160",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 3
      },
      "lineNbr": 1410,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2019-10-24T18:44:38Z",
      "side": 1,
      "message": "might be interesting to run with go race checking on. i think if it is theoretically possible and we know it, we likely want to address it before it becomes too real in production.\n\nthis may mean we use the same onuIdsLock mutex or a different one, or we organize the code so that we can guarantee that updates are serialized (i.e. using channels or something)",
      "parentUuid": "41a1b286_a2bab819",
      "range": {
        "startLine": 1410,
        "startChar": 0,
        "endLine": 1410,
        "endChar": 38
      },
      "revId": "0a07dd47ed312d8d419e907e4a97c46dc5aac6fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a888f4ce_fd79b0e1",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 3
      },
      "lineNbr": 1410,
      "author": {
        "id": 1000455
      },
      "writtenOn": "2019-10-24T18:54:42Z",
      "side": 1,
      "message": "Fair enough, but if I am going to add more locking to protect other maps, I want to test how adding that lock affects the processes use that map. Does it make sense to create another task for that and address it separately?",
      "parentUuid": "3dfabf76_46d65160",
      "range": {
        "startLine": 1410,
        "startChar": 0,
        "endLine": 1410,
        "endChar": 38
      },
      "revId": "0a07dd47ed312d8d419e907e4a97c46dc5aac6fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc49fb40_1273999b",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 3
      },
      "lineNbr": 1410,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2019-10-24T19:01:28Z",
      "side": 1,
      "message": "yes, i think that make sense.",
      "parentUuid": "a888f4ce_fd79b0e1",
      "range": {
        "startLine": 1410,
        "startChar": 0,
        "endLine": 1410,
        "endChar": 38
      },
      "revId": "0a07dd47ed312d8d419e907e4a97c46dc5aac6fe",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}