{
  "comments": [
    {
      "key": {
        "uuid": "2b7b901d_8d460996",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 4
      },
      "lineNbr": 267,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2019-10-10T06:59:11Z",
      "side": 1,
      "message": "May not be necessary to pass the duplicate params again. The intfID, onuID, uniID etc. are already passed in args map.",
      "revId": "4a4117dce55b23b607ab2b69be8808739be79f90",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7846ee2c_fd581611",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 4
      },
      "lineNbr": 1215,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2019-10-10T06:59:11Z",
      "side": 1,
      "message": "Remove duplicate \u0027found\u0027",
      "revId": "4a4117dce55b23b607ab2b69be8808739be79f90",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1f0f596_cbc2ab49",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 4
      },
      "lineNbr": 1248,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2019-10-10T06:59:11Z",
      "side": 1,
      "message": "Can you please elaborate which case are you addressing here? Why this special handling is needed.",
      "revId": "4a4117dce55b23b607ab2b69be8808739be79f90",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02edbc50_71f144c4",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 4
      },
      "lineNbr": 1248,
      "author": {
        "id": 1000405
      },
      "writtenOn": "2019-10-14T08:55:17Z",
      "side": 1,
      "message": "For the TT use-case, the OLT adapter receives three flows: VOIP US DHCP, VOIP US Dataplane, and VOIP DS Dataplane. In such a case, US DHCP flow-id is different from corresponding data plane flows.  (i.e while VOIP US DHCP flow-id is 1, data plane flows are symmetric, and have the same flow-id such as 2).  \n\nLet\u0027s think about the scenario that we delete the VOIP service for a user. OLT adapter receives three flow removal requests. After the symmetric flows have been removed, I want to free the corresponding gem port, alloc-id and technology profile id for the next usage. (each service definition doesn\u0027t include DHCP flow - i.e. TT VOIP service uses DHCP but HSI doesn\u0027t). So I need to delete the related technology profile id from the technology profile list of (pon, onu, uni, tp_id). The OLT adapter can receive the US DHCP flow removal request firstly, and I don\u0027t want to release the related resources at this point.\n\nI think each different service will have a different technology_profile id for that (pon, onu, uni). So, there is no need to keep that technology profile id. The important point is here to wait until both symmetric flows (data-plane flows) are gone. So, I check the US trap-to-host flow to be sure that we don\u0027t delete the technology profile id after the trap-to-host flow is removed. I think this answer also fits the next question regarding the removal of technology profile id for an onu.  (Please note that I tested this solution for both AT\u0026T and TT use-case)",
      "parentUuid": "e1f0f596_cbc2ab49",
      "revId": "4a4117dce55b23b607ab2b69be8808739be79f90",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "331fba57_a9beb260",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 4
      },
      "lineNbr": 1248,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2019-10-15T09:57:26Z",
      "side": 1,
      "message": "I think the assumption you have made is DHCP Trap flow delete comes first always. Isn\u0027t there a possibility where the order of flows are not guaranteed from ONOS. What happens if we receive HSI delete first and then DHCP delete?",
      "parentUuid": "02edbc50_71f144c4",
      "revId": "4a4117dce55b23b607ab2b69be8808739be79f90",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ec34080_15f74895",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 4
      },
      "lineNbr": 1248,
      "author": {
        "id": 1000405
      },
      "writtenOn": "2019-10-21T10:29:57Z",
      "side": 1,
      "message": "For the TT\u0027s HSI use-case, we don\u0027t send DHCP trap flow - for VOIP and multicast, we send. - Anyway, the services with US DHCP flow, of course, data-plane service flow deletion can be received before the DHCP. In such a case, if we receive both upstream and downstream flow deletion requests (for symmetric flows), I remove the related gem, tcont and tech-profile instances and after these, when we receive us dhcp flow removal request, I do nothing, just return. Maybe we can find a better way but this is the best solution for me now. The main idea and requirement is after the flows are deleted, it is needed to free gem and tconts. As you know, TT uses multi-tcont, multi-gems, multi tech-profiles and it is very important to free the unused objects. If you suggest a better way, I can update this part.",
      "parentUuid": "331fba57_a9beb260",
      "revId": "4a4117dce55b23b607ab2b69be8808739be79f90",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1de9b58_326558d5",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 4
      },
      "lineNbr": 1252,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2019-10-10T06:59:11Z",
      "side": 1,
      "message": "It is not clear to me why TP ID should be removed for a ONU here. There my be other flows still for the ONU.",
      "revId": "4a4117dce55b23b607ab2b69be8808739be79f90",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e2fe016_bdafb477",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 4
      },
      "lineNbr": 1252,
      "author": {
        "id": 1000405
      },
      "writtenOn": "2019-10-21T10:29:57Z",
      "side": 1,
      "message": "Let\u0027s think TT HSI use-case. We send just two flows (us and ds data-plane flows) using one tech profile id (one gem and one tcont).\nWhen we send volt-remove request to Voltha, firstly we delete the flows; then we delete the gem port and the tcont. After the release operation of these subjects, this tech profile id is not used by the (pon,onu,uni) anymore. So we delete this tech profile id from the (pon,onu,uni) mapping.",
      "parentUuid": "c1de9b58_326558d5",
      "revId": "4a4117dce55b23b607ab2b69be8808739be79f90",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d43c9f85_7460ca2a",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 4
      },
      "lineNbr": 1267,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2019-10-10T06:59:11Z",
      "side": 1,
      "message": "The \u0027updatedFlows\u0027 is only for one flow_id. But there could many other flows for the ONU. But we cleaning up everything here.",
      "revId": "4a4117dce55b23b607ab2b69be8808739be79f90",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbf7c99b_50d8c9d4",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 4
      },
      "lineNbr": 1267,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2019-10-15T09:57:26Z",
      "side": 1,
      "message": "I wanted to follow up on this comment.\nIs the case where each Gem port corresponds to one service? Or what is this Case?\nAlso, should not move the RemoveTechProfileIDForONU after this handling?",
      "parentUuid": "d43c9f85_7460ca2a",
      "revId": "4a4117dce55b23b607ab2b69be8808739be79f90",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cad11fa0_f8c660c7",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 4
      },
      "lineNbr": 1267,
      "author": {
        "id": 1000405
      },
      "writtenOn": "2019-10-21T10:29:57Z",
      "side": 1,
      "message": "I implemented this method for the AT\u0026T and DT use-cases. For AT\u0026T use case, one technology profile includes four gem ports and we send different flows for each gem port using different p-bits. So let\u0027s think the volt-remove scenario: we will want to delete the flows by one by; and the release the related gem ports and the alloc id. Finally, we will want to delete the tech profile instance and delete tcont. i.e. If we delete the data-plane flows for gem1, we can delete the related gem but not the related tcont (it is still used by gem2, gem3 and gem4). So I need to be sure that all gem ports and all flows are deleted for this t-cont to release the alloc id and delete the tech profile instance.",
      "parentUuid": "cbf7c99b_50d8c9d4",
      "revId": "4a4117dce55b23b607ab2b69be8808739be79f90",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "637957e3_0a66dd18",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 4
      },
      "lineNbr": 1267,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2019-10-22T08:18:00Z",
      "side": 1,
      "message": "For AT\u0026T use case if HSIA delete comes first, the scheduler/queues wont be cleaned on the BAL because DHCP flow still uses some gem ports. But, when DHCP delete comes, it will return from above, because it is a trapToHost flow. Is that correct? Then the schedulers/queues wont be freed.\nSorry, I have so many questions. But, I just want to get some basic right.",
      "parentUuid": "cad11fa0_f8c660c7",
      "revId": "4a4117dce55b23b607ab2b69be8808739be79f90",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d952f13_935031f9",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 4
      },
      "lineNbr": 1302,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2019-10-15T09:57:26Z",
      "side": 1,
      "message": "You may want to call clearFlowFromResourceManager on a separate go routine.",
      "revId": "4a4117dce55b23b607ab2b69be8808739be79f90",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d12164f_a7aae641",
        "filename": "adaptercore/resourcemanager/resourcemanager.go",
        "patchSetId": 4
      },
      "lineNbr": 523,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2019-10-10T06:59:11Z",
      "side": 1,
      "message": "You should remove the below comment",
      "revId": "4a4117dce55b23b607ab2b69be8808739be79f90",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}