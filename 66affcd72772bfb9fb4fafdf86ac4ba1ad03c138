{
  "comments": [
    {
      "key": {
        "uuid": "cebcea0c_e833c529",
        "filename": "adaptercore/error.go",
        "patchSetId": 18
      },
      "lineNbr": 65,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-14T21:02:59Z",
      "side": 1,
      "message": "Consider returning an error interface type from NewErr\u003ctype\u003e() functions.",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ec9073f_83ae4c33",
        "filename": "adaptercore/error.go",
        "patchSetId": 18
      },
      "lineNbr": 65,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2020-02-14T21:09:18Z",
      "side": 1,
      "message": "a lot of the usage is \nreturn NewErr\u003ctype\u003e(...).Log()\nso I could create and return an interface LoggableError or something.",
      "parentUuid": "cebcea0c_e833c529",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "183827d4_180755e4",
        "filename": "adaptercore/error.go",
        "patchSetId": 18
      },
      "lineNbr": 65,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2020-02-14T22:15:32Z",
      "side": 1,
      "message": "they will return LoggableError in next patch",
      "parentUuid": "4ec9073f_83ae4c33",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ddaf187c_d681fb9d",
        "filename": "adaptercore/error.go",
        "patchSetId": 18
      },
      "lineNbr": 112,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-14T21:47:01Z",
      "side": 1,
      "message": "I\u0027m generally opposed to using ...\u003ctype\u003e to make an argument optional (especially when only one is typically expected).\n\nConsider just removing this argument.",
      "range": {
        "startLine": 112,
        "startChar": 38,
        "endLine": 112,
        "endChar": 55
      },
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c039730_0b6176f2",
        "filename": "adaptercore/error.go",
        "patchSetId": 18
      },
      "lineNbr": 112,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2020-02-14T22:15:32Z",
      "side": 1,
      "message": "I actually have considered removing it and in reality is was a shortcut for an \"optional\" argument. not using it now, so will remove.",
      "parentUuid": "ddaf187c_d681fb9d",
      "range": {
        "startLine": 112,
        "startChar": 38,
        "endLine": 112,
        "endChar": 55
      },
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "852d0162_846c7721",
        "filename": "adaptercore/error.go",
        "patchSetId": 18
      },
      "lineNbr": 112,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-02-14T23:08:05Z",
      "side": 1,
      "message": "Plan to use the new LogLevel type that Rohan and Divya are implementing in their patch, once their patch is merged?",
      "range": {
        "startLine": 112,
        "startChar": 27,
        "endLine": 112,
        "endChar": 36
      },
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba59d09c_dd62ca68",
        "filename": "adaptercore/error.go",
        "patchSetId": 18
      },
      "lineNbr": 159,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-14T21:02:59Z",
      "side": 1,
      "message": "These pass-to-embedded-struct functions are unnecessary.\n\nFunctions from embedded structs can be called on the outer struct.\n\n(more like this.)",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 159,
        "endChar": 1
      },
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc8f3f9e_6fda5ae9",
        "filename": "adaptercore/error.go",
        "patchSetId": 18
      },
      "lineNbr": 159,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2020-02-14T21:09:18Z",
      "side": 1,
      "message": "i thought so at first, but if you don\u0027t do it this way you lose the tyoe of the outer err type. i.e. the error returned is always ErrAdapter. this was the error returned is of the receiver type",
      "parentUuid": "ba59d09c_dd62ca68",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 159,
        "endChar": 1
      },
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "068262e5_91a9d548",
        "filename": "adaptercore/error.go",
        "patchSetId": 18
      },
      "lineNbr": 174,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-14T21:47:01Z",
      "side": 1,
      "message": "For these subtypes, Consider accepting a reason string \u0026 prepending it with \"invalid value: \".  There seem to be several places through this patch that more information could be added to the errors, but can\u0027t be without generating \u0026 embedding a wrapped reason.\n\n`NewErrNotFound(\"meterbands\", log.Fields{\"flow-metadata\": sq.flowMetadata}, errors.New(\"Could-not-get-meterbands-from-flowMetadata\"))`\n\n^ Just trying to find a cleaner solution that doesn\u0027t lead to this.  Not sure I\u0027m on the right track.",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d6b3251_fde0a831",
        "filename": "adaptercore/error.go",
        "patchSetId": 18
      },
      "lineNbr": 174,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2020-02-14T22:15:32Z",
      "side": 1,
      "message": "if they want a reason they can add one via the `log.Fields`. not sure if this should be formalized beyond that to start.",
      "parentUuid": "068262e5_91a9d548",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ad7f7dd_79713a6e",
        "filename": "adaptercore/openolt.go",
        "patchSetId": 18
      },
      "lineNbr": 165,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-14T21:47:01Z",
      "side": 1,
      "message": ".Log() ?",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fad5e9d1_1f0bc12d",
        "filename": "adaptercore/openolt.go",
        "patchSetId": 18
      },
      "lineNbr": 165,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2020-02-14T22:15:32Z",
      "side": 1,
      "message": "thanks, will do a once over to make sure i .Log everywhere",
      "parentUuid": "2ad7f7dd_79713a6e",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae5b5497_39c49ef4",
        "filename": "adaptercore/openolt.go",
        "patchSetId": 18
      },
      "lineNbr": 175,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-14T21:47:01Z",
      "side": 1,
      "message": ".Log() ?",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "788ed253_3a291c1e",
        "filename": "adaptercore/openolt.go",
        "patchSetId": 18
      },
      "lineNbr": 237,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-14T21:47:01Z",
      "side": 1,
      "message": ".Log() ?",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9acdda11_d8810c04",
        "filename": "adaptercore/openolt.go",
        "patchSetId": 18
      },
      "lineNbr": 247,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-14T21:47:01Z",
      "side": 1,
      "message": ".Log() ?",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7716c5be_099e935b",
        "filename": "adaptercore/openolt.go",
        "patchSetId": 18
      },
      "lineNbr": 257,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-14T21:47:01Z",
      "side": 1,
      "message": ".Log() ?",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0289e83_d4f33a0f",
        "filename": "adaptercore/openolt.go",
        "patchSetId": 18
      },
      "lineNbr": 277,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-14T21:47:01Z",
      "side": 1,
      "message": ".Log() ?",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06a2286d_fa5baead",
        "filename": "adaptercore/openolt.go",
        "patchSetId": 18
      },
      "lineNbr": 298,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-14T21:47:01Z",
      "side": 1,
      "message": ".Log() ?",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8652f48a_a2de0cb8",
        "filename": "adaptercore/openolt.go",
        "patchSetId": 18
      },
      "lineNbr": 369,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-14T21:47:01Z",
      "side": 1,
      "message": ".Log() ?",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "937ef033_6394f175",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 18
      },
      "lineNbr": 402,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-14T21:47:01Z",
      "side": 1,
      "message": "The logged info is helpful, but doesn\u0027t appear in the returned error.  Should it be?  \n\nAlso consider `.Log()`?\n\n(More like this.  I won\u0027t comment on each.)",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfb241b5_6202f4d0",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 18
      },
      "lineNbr": 402,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2020-02-14T22:15:32Z",
      "side": 1,
      "message": "yep, just missed the .Log in a lot of places",
      "parentUuid": "937ef033_6394f175",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13fec8b0_aeb84458",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 18
      },
      "lineNbr": 870,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-14T21:47:01Z",
      "side": 1,
      "message": "In cases where there was previously an error logged but no error was returned, should the error just be returned \u0026 not logged?",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b598e8ad_2ae57adb",
        "filename": "adaptercore/openolt_flowmgr.go",
        "patchSetId": 18
      },
      "lineNbr": 870,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2020-02-14T22:15:32Z",
      "side": 1,
      "message": "in an effort to minimize the differences to start, anywhere there was a log and a return i want to log and return.",
      "parentUuid": "13fec8b0_aeb84458",
      "revId": "66affcd72772bfb9fb4fafdf86ac4ba1ad03c138",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}