{
  "comments": [
    {
      "key": {
        "uuid": "34e6f184_f34897a2",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 600,
      "author": {
        "id": 1000097
      },
      "writtenOn": "2019-06-10T09:23:35Z",
      "side": 0,
      "message": "In principle I agree to the fix as it is removing things which the ONU adapter is doing.\n\nBut if you look into the code just below, we are again getting the childDevice and operating on it and potentially that also could fail and looks like that is why it is being tried multiple times with sleeps, which according to me is not an elegant solution.\n\nIt would be good to understand as to why the core behaves in this way. Normally the expectation would be that once a create (ChildDeviceDetected in this case) we should be able to get and modify it (DeviceStateUpdate in this case).\n\nAdding Khen to the review for his comments.",
      "revId": "dbdc134c695a5ed00fc315683427d3af4c3e3248",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02249ecb_8b4fb3e0",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 600,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-06-10T13:47:29Z",
      "side": 0,
      "message": "Please take a look at the logs in the Core.   This behavior is unexpected. Seems like a bug to me.",
      "parentUuid": "34e6f184_f34897a2",
      "revId": "dbdc134c695a5ed00fc315683427d3af4c3e3248",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d2e86fa_8a8f453e",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 600,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2019-06-10T16:03:38Z",
      "side": 0,
      "message": "Amit as you said, the code below also fails for the first query. And I also agree that this is not an elegant solution. VOL-1586 was a task pointing this problem, but in fact the solution in this task is not also an elegant solution. We have to define a message between core and olt-adapter which will be sent from core to adapter when core ensures all thinks done by childDevicedetected, thus onu-adapter informed and the child device inserted to KV store. Olt-adapter can send activatONU to device after this message is received. But still the DeviceStatusUpdate here is unnecessary.",
      "parentUuid": "02249ecb_8b4fb3e0",
      "revId": "dbdc134c695a5ed00fc315683427d3af4c3e3248",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7cac553_37cc70f7",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 600,
      "author": {
        "id": 1000097
      },
      "writtenOn": "2019-06-11T12:44:32Z",
      "side": 0,
      "message": "So basically the problem is that activation indication can come into the olt adapter before the child device adapter is actually created.\n\n@Khen: Would you agree if we create an API on the adapters (it could be called childDeviceCreated) which the Core would call after it knows that the child device adapter is created?",
      "parentUuid": "6d2e86fa_8a8f453e",
      "revId": "dbdc134c695a5ed00fc315683427d3af4c3e3248",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dabd4c67_0a17f181",
        "filename": "adaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 600,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2019-06-11T13:49:10Z",
      "side": 0,
      "message": "I read the Jira and the comments here but I still don\u0027t fully get a picture on what\u0027s going on.  The moment a childdevicedetected message is received in the core that child device is created in the core.     If there was a sequence diagram that would show the interactions (using the actual API names) between the core/onu adapter and olt adapter then it would be clearer on what issue we are trying to resolve.  Is it possible to create one?\n\nAlso, the python openolt adapter did not seem to have encountered this issue.  Is there something else missing?\n\nIf you send me the log in the core for the above use case I can get a better understanding as well.\n\nThanks\nKhen",
      "parentUuid": "e7cac553_37cc70f7",
      "revId": "dbdc134c695a5ed00fc315683427d3af4c3e3248",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}